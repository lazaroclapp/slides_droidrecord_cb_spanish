{"ts":1370474496116,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var express   = require('express');\nvar fs        = require('fs');\nvar io        = require('socket.io');\nvar _         = require('underscore');\nvar Mustache  = require('mustache');\n\nvar app       = express.createServer();\nvar staticDir = express.static;\n\nio            = io.listen(app);\n\nvar opts = {\n\tport :      1947,\n\tbaseDir :   __dirname + '/../../'\n};\n\nio.sockets.on('connection', function(socket) {\n\tsocket.on('slidechanged', function(slideData) {\n\t\tsocket.broadcast.emit('slidedata', slideData);\n\t});\n\tsocket.on('fragmentchanged', function(fragmentData) {\n\t\tsocket.broadcast.emit('fragmentdata', fragmentData);\n\t});\n});\n\napp.configure(function() {\n\t[ 'css', 'js', 'images', 'plugin', 'lib' ].forEach(function(dir) {\n\t\tapp.use('/' + dir, staticDir(opts.baseDir + dir));\n\t});\n});\n\napp.get(\"/\", function(req, res) {\n\tfs.createReadStream(opts.baseDir + '/index.html').pipe(res);\n});\n\napp.get(\"/notes/:socketId\", function(req, res) {\n\n\tfs.readFile(opts.baseDir + 'plugin/notes-server/notes.html', function(err, data) {\n\t\tres.send(Mustache.to_html(data.toString(), {\n\t\t\tsocketId : req.params.socketId\n\t\t}));\n\t});\n\t// fs.createReadStream(opts.baseDir + 'notes-server/notes.html').pipe(res);\n});\n\n// Actually listen\napp.listen(opts.port || null);\n\nvar brown = '\\033[33m',\n\tgreen = '\\033[32m',\n\treset = '\\033[0m';\n\nvar slidesLocation = \"http://localhost\" + ( opts.port ? ( ':' + opts.port ) : '' );\n\nconsole.log( brown + \"reveal.js - Speaker Notes\" + reset );\nconsole.log( \"1. Open the slides at \" + green + slidesLocation + reset );\nconsole.log( \"2. Click on the link your JS console to go to the notes page\" );\nconsole.log( \"3. Advance through your slides and your notes will advance automatically\" );\n"]],"start1":0,"start2":0,"length1":0,"length2":1703}]],"length":1703}
{"contributors":[],"silentsave":false,"ts":1370474456501,"patch":[[{"diffs":[[0,"    "],[-1,"1947"],[1,"process.env.PORT"],[0,",\n\tb"]],"start1":310,"start2":310,"length1":12,"length2":24},{"diffs":[[0,"n = "],[-1,"\"http://localhost\""],[1,"process.env.IP"],[0," + ("]],"start1":1343,"start2":1343,"length1":26,"length2":22}]],"length":1711,"saved":false}
{"ts":1370474676119,"patch":[[{"diffs":[[0," listen\n"],[1,"//"],[0,"app.list"]],"start1":1220,"start2":1220,"length1":16,"length2":18}]],"length":1713,"saved":false}
{"ts":1370474693058,"patch":[[{"diffs":[[0," listen\n"],[-1,"//"],[0,"app.list"]],"start1":1220,"start2":1220,"length1":18,"length2":16}]],"length":1711,"saved":false}
{"ts":1370475127050,"patch":[[{"diffs":[[0,"port"],[-1," || null"],[0,");\n\n"]],"start1":1244,"start2":1244,"length1":16,"length2":8}]],"length":1703,"saved":false}
{"ts":1370475362524,"patch":[[{"diffs":[[0,"pts.port"],[1,", process.env.IP"],[0,");\n\nvar "]],"start1":1240,"start2":1240,"length1":16,"length2":32}]],"length":1719,"saved":false}
